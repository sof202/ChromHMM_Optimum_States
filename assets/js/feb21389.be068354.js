"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[5902],{3352:(i,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>s,default:()=>c,frontMatter:()=>a,metadata:()=>o,toc:()=>p});var n=t(5893),r=t(1151);const a={title:"5_PartitionedHeritability",description:"Visualises the partitioned heritability (enrichment)",sidebar_position:3},s="5_PartitionedHeritability",o={id:"ChromOptimise/Pipeline-Explanation/LDSC/PartitionedHeritability",title:"5_PartitionedHeritability",description:"Visualises the partitioned heritability (enrichment)",source:"@site/docs/ChromOptimise/Pipeline-Explanation/LDSC/5_PartitionedHeritability.md",sourceDirName:"ChromOptimise/Pipeline-Explanation/LDSC",slug:"/ChromOptimise/Pipeline-Explanation/LDSC/PartitionedHeritability",permalink:"/ChromOptimise/ChromOptimise/Pipeline-Explanation/LDSC/PartitionedHeritability",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"5_PartitionedHeritability",description:"Visualises the partitioned heritability (enrichment)",sidebar_position:3},sidebar:"documentationSidebar",previous:{title:"SNPAssignment",permalink:"/ChromOptimise/ChromOptimise/Pipeline-Explanation/LDSC/SNPAssignment"},next:{title:"HeritabilityPlots",permalink:"/ChromOptimise/ChromOptimise/Pipeline-Explanation/LDSC/HeritabilityPlots"}},l={},p=[{value:"Explanation",id:"explanation",level:2},{value:"Usage",id:"usage",level:2}];function h(i){const e={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",...(0,r.a)(),...i.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h1,{id:"5_partitionedheritability",children:"5_PartitionedHeritability"}),"\n",(0,n.jsx)(e.h2,{id:"explanation",children:"Explanation"}),"\n",(0,n.jsxs)(e.p,{children:["This script will run LDSC again, but now with the ",(0,n.jsx)(e.code,{children:"-h2"})," flag. This signifies\nthat partitioned heritability is wanted. Specifically, what we want to extract\nis the enrichment for each of our states (and the other baseline annotations).\nEnrichment is described as the proportion of heritability divided by the\nproportion of SNPs in the annotated regions in\n",(0,n.jsx)(e.a,{href:"https://www.biorxiv.org/content/10.1101/014241v1.full.pdf",children:"this paper"}),"."]}),"\n",(0,n.jsxs)(e.p,{children:["After extracting this information, the script will call the Rscript\n",(0,n.jsx)(e.a,{href:"/ChromOptimise/ChromOptimise/Pipeline-Explanation/LDSC/HeritabilityPlots",children:"HeritabilityPlots.R"})," to help with visualisation."]}),"\n",(0,n.jsx)(e.h2,{id:"usage",children:"Usage"}),"\n",(0,n.jsxs)(e.p,{children:["Typically, this script will be ran after being called by\n",(0,n.jsx)(e.a,{href:"/ChromOptimise/ChromOptimise/Pipeline-Explanation/LDSC/ReferenceLDSCore",children:"4_ReferenceLDSCore.sh"}),". However, one may want to use\nthis script in isolation (perhaps for testing a different set of gwas traits)."]}),"\n",(0,n.jsx)(e.p,{children:"The reason why this script is split away from the previous script in the\npipeline is because the previous script is ran as an array. The memory assigned\nto each task in the array is split evenly and is not dynamic. As a result,\nunless your machine/system has RAM in the 100s of GBs, the partitioned\nheritability step will return out of memory errors. As we only need to compute\nthe plots once, we just use a separate script to run these analyses."})]})}function c(i={}){const{wrapper:e}={...(0,r.a)(),...i.components};return e?(0,n.jsx)(e,{...i,children:(0,n.jsx)(h,{...i})}):h(i)}},1151:(i,e,t)=>{t.d(e,{Z:()=>o,a:()=>s});var n=t(7294);const r={},a=n.createContext(r);function s(i){const e=n.useContext(a);return n.useMemo((function(){return"function"==typeof i?i(e):{...e,...i}}),[e,i])}function o(i){let e;return e=i.disableParentContext?"function"==typeof i.components?i.components(r):i.components||r:s(i.components),n.createElement(a.Provider,{value:e},i.children)}}}]);