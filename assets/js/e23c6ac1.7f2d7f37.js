"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[897],{2966:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var n=i(5893),s=i(1151);const r={sidebar_position:5},a="Factors that affect the output",o={id:"ChromOptimise/Factors-that-affect-the-output",title:"Factors that affect the output",description:"The optimum number of states to use with your dataset will likely change depending on the quality of your data and the user inputs during the pipeline. Below are some examples of this.",source:"@site/docs/ChromOptimise/Factors-that-affect-the-output.md",sourceDirName:"ChromOptimise",slug:"/ChromOptimise/Factors-that-affect-the-output",permalink:"/ChromOptimise/ChromOptimise/Factors-that-affect-the-output",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"documentationSidebar",previous:{title:"Supplementary pipeline explanation",permalink:"/ChromOptimise/ChromOptimise/Supplementary-pipeline-explanation"},next:{title:"Processing times",permalink:"/ChromOptimise/ChromOptimise/Processing-Times"}},l={},c=[{value:"Phred score threshold",id:"phred-score-threshold",level:2},{value:"Sample size",id:"sample-size",level:2},{value:"Bin size",id:"bin-size",level:2},{value:"Number of epigenetic marks",id:"number-of-epigenetic-marks",level:2},{value:"Quality of data",id:"quality-of-data",level:2}];function h(e){const t={h1:"h1",h2:"h2",li:"li",p:"p",ul:"ul",...(0,s.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"factors-that-affect-the-output",children:"Factors that affect the output"}),"\n",(0,n.jsx)(t.p,{children:"The optimum number of states to use with your dataset will likely change depending on the quality of your data and the user inputs during the pipeline. Below are some examples of this."}),"\n",(0,n.jsx)(t.h2,{id:"phred-score-threshold",children:"Phred score threshold"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"This is used during quality control (2_batch_ProcessBamFiles.sh)"}),"\n",(0,n.jsx)(t.li,{children:"A lower value will result in more inaccurate reads contributing to the binary files"}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"sample-size",children:"Sample size"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"A larger sample size will result in a higher level of completeness for your data, possibly increasing model accuracy"}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"bin-size",children:"Bin size"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"This is used in the binarization process"}),"\n",(0,n.jsx)(t.li,{children:"Smaller bin sizes will be more susceptible to random background noise in the data"}),"\n",(0,n.jsx)(t.li,{children:"Larger bin sizes lose data precision"}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"number-of-epigenetic-marks",children:"Number of epigenetic marks"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"A large number of epigenetic marks is likely to require more states than a small number of marks to achieve optimality"}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"quality-of-data",children:"Quality of data"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["The random noise apparent in the raw sequencing data","\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"This is directly linked to bin size"}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["The presence/absence of a control file","\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"Scripts can be altered to allow for a control file to be used during the binarization process"}),"\n",(0,n.jsx)(t.li,{children:"Control files can vastly improve the algorithm's success rate in differentiating between background noise and actual peaks"}),"\n"]}),"\n"]}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},1151:(e,t,i)=>{i.d(t,{Z:()=>o,a:()=>a});var n=i(7294);const s={},r=n.createContext(s);function a(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);