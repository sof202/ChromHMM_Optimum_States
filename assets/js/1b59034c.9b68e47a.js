"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7642],{4724:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>r,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>h});var t=n(5893),s=n(1151);const a={title:"2_BinarizeFiles",description:"The script used to binarize the dataset for ChromHMM.",sidebar_position:3},o="2_BinarizeFiles",l={id:"ChromOptimise/Pipeline-Explanation/BinarizeFiles",title:"2_BinarizeFiles",description:"The script used to binarize the dataset for ChromHMM.",source:"@site/docs/ChromOptimise/Pipeline-Explanation/2_BinarizeFiles.md",sourceDirName:"ChromOptimise/Pipeline-Explanation",slug:"/ChromOptimise/Pipeline-Explanation/BinarizeFiles",permalink:"/ChromOptimise/ChromOptimise/Pipeline-Explanation/BinarizeFiles",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"2_BinarizeFiles",description:"The script used to binarize the dataset for ChromHMM.",sidebar_position:3},sidebar:"documentationSidebar",previous:{title:"1_SubsampleBamFiles",permalink:"/ChromOptimise/ChromOptimise/Pipeline-Explanation/SubsampleBamFiles"},next:{title:"3_batch_CreateIncrementalModels",permalink:"/ChromOptimise/ChromOptimise/Pipeline-Explanation/batch_CreateIncrementalModels"}},r={},h=[{value:"Explanation",id:"explanation",level:2},{value:"Bed files",id:"bed-files",level:2},{value:"Bin size",id:"bin-size",level:3}];function d(e){const i={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.h1,{id:"2_binarizefiles",children:"2_BinarizeFiles"}),"\n",(0,t.jsx)(i.h2,{id:"explanation",children:"Explanation"}),"\n",(0,t.jsxs)(i.p,{children:["This uses ChromHMM's ",(0,t.jsx)(i.code,{children:"BinarizeBam"})," command to binarize the subsampled ",(0,t.jsx)(i.code,{children:".bam"}),"\nfile produced in the previous step."]}),"\n",(0,t.jsx)(i.p,{children:"It is assumed at this point that the at least step 3 has been completed for\nall of the epigenetic marks that you aim to use in the hidden Markov models,\nand that the sample size used for each mark is the same."}),"\n",(0,t.jsx)(i.admonition,{title:"Unwanted chromosomes",type:"note",children:(0,t.jsx)(i.p,{children:"In step 7, the tool ldsc is used to inspect biological relevance in the chromatin\nstates obtained from ChromHMM. This step specifically will only consider autosomal\nchromosomes. As a result, sex (and mitochondrial) binary files are deleted at the\nend of this script. Comment these lines out if you want to keep these chromosomes\nfor the model generation step (step 5)."})}),"\n",(0,t.jsx)(i.h2,{id:"bed-files",children:"Bed files"}),"\n",(0,t.jsx)(i.p,{children:"You can also use bed files at this stage if you wish, you are not forced into\nusing bam files. To use a bed file with this script, all you need to do is\nrename the bed file to have the form:"}),"\n",(0,t.jsxs)(i.blockquote,{children:["\n",(0,t.jsx)(i.p,{children:"Subsampled.sample-size.mark-name.bed"}),"\n"]}),"\n",(0,t.jsx)(i.p,{children:"So for example, if the sample size for the data set is 100% and the mark is\nH3K27me3, you'd rename the bed file to:"}),"\n",(0,t.jsxs)(i.blockquote,{children:["\n",(0,t.jsx)(i.p,{children:"Subsampled.100.H3K27ac.bed"}),"\n"]}),"\n",(0,t.jsx)(i.p,{children:"The pipeline was designed to work with a single bam file per mark to make file\nmanagement more bearable and allow for better subsampling. Note that when using\nthis script, only the files that have the specified sample size (in the\ncommand line)in their file name will be used in the binarization step."}),"\n",(0,t.jsx)(i.h3,{id:"bin-size",children:"Bin size"}),"\n",(0,t.jsx)(i.p,{children:"This step takes a user input for the bin size, this will have a noticable\neffect on the quality of your models. ChromHMM recommends a bin size of 200\nand this is reflected in this pipeline. It is important to consider the\nimplications of changing the bin size. A lower value will increase the\ngranularity of the data, but increases the susceptibility to random noise in\nthe dataset. A larger value will achieve the opposite."}),"\n",(0,t.jsxs)(i.p,{children:["To learn more about how the bin size (and other factors) affect the final\nresult of the pipeline, head to\n",(0,t.jsx)(i.a,{href:"/ChromOptimise/ChromOptimise/Factors-that-affect-the-output",children:"this page"}),"."]}),"\n",(0,t.jsx)(i.h1,{id:"example-usage",children:"Example usage"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:'# Takes all files in ${SUBSAMPLE_DIR} that used a sample size of 75% and\n# binarizes them using a bin size of 200 and the hg19 assembly\nsbatch 2_BinarizeFiles.sh \\\n--config="path/to/configuration/directory" \\\n--binsize=200 \\\n--samplesize=75 \\\n--assembly=hg19\n'})})]})}function c(e={}){const{wrapper:i}={...(0,s.a)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},1151:(e,i,n)=>{n.d(i,{Z:()=>l,a:()=>o});var t=n(7294);const s={},a=t.createContext(s);function o(e){const i=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(a.Provider,{value:i},e.children)}}}]);