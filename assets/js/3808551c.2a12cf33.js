"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7629],{4927:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>d});var n=i(5893),a=i(1151);const o={title:"Generate_Big_Model",description:"The script that produces a single large model file.",sidebar_position:2},r="Generate_Big_Model",s={id:"ChromOptimise/Supplementary-Pipeline-Explanation/Generate_Big_Model",title:"Generate_Big_Model",description:"The script that produces a single large model file.",source:"@site/docs/ChromOptimise/Supplementary-Pipeline-Explanation/Generate_Big_Model.md",sourceDirName:"ChromOptimise/Supplementary-Pipeline-Explanation",slug:"/ChromOptimise/Supplementary-Pipeline-Explanation/Generate_Big_Model",permalink:"/ChromOptimise/ChromOptimise/Supplementary-Pipeline-Explanation/Generate_Big_Model",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Generate_Big_Model",description:"The script that produces a single large model file.",sidebar_position:2},sidebar:"documentationSidebar",previous:{title:"Overall Explanation",permalink:"/ChromOptimise/ChromOptimise/Supplementary-Pipeline-Explanation/Overall"},next:{title:"Execute_Redundancy_Metrics",permalink:"/ChromOptimise/ChromOptimise/Supplementary-Pipeline-Explanation/Execute_Redundancy_Metrics"}},l={},d=[{value:"Explanation",id:"explanation",level:2},{value:"Example usage",id:"example-usage",level:2}];function p(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,a.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"generate_big_model",children:"Generate_Big_Model"}),"\n",(0,n.jsx)(t.h2,{id:"explanation",children:"Explanation"}),"\n",(0,n.jsx)(t.p,{children:"This uses the binarized data produced by 4_BinarizeBamFiles.sh to produce a\nsingle very complex model with a high number of user specified states. The\nmodel produced will use a random initialisation of emission/transition\nparameters so that an arbitrary number of states can be used in the model (the\ndefault 'information' initialisation method does not allow for this)."}),"\n",(0,n.jsx)(t.p,{children:"Ideally the model size used will be large enough that the model produced is\n'guaranteed' to have lots of redundant states. We appreciate that the model\nlearning time for this script can be incredibly long, but this stage is\nimportant for determining good values for thresholds."}),"\n",(0,n.jsxs)(t.admonition,{title:"Baum-Welch",type:"note",children:[(0,n.jsxs)(t.p,{children:["ChromHMM uses the Baum-Welch algorithm to train the model.\nThis algorithm finds a ",(0,n.jsx)(t.strong,{children:"local"})," maximum of the\n",(0,n.jsx)(t.a,{href:"/ChromOptimise/ChromOptimise/ChromHMM-overview#estimated-log-likelihood",children:"estimated log likelihood"}),",\n",(0,n.jsx)(t.strong,{children:"not"})," the ",(0,n.jsx)(t.strong,{children:"global"})," maximum."]}),(0,n.jsx)(t.p,{children:"Therefore, because the initialisation is random, the models produced by this\nscript can take variable lengths of time to train (for different seeds) and may\nbe highly innacurate (despite their complexity)."})]}),"\n",(0,n.jsx)(t.h2,{id:"example-usage",children:"Example usage"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"# Generates a model with 50 states.\nsbatch Generate_Big_Model.sh \\\npath/to/configuration/directory \\\n50\n"})})]})}function m(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},1151:(e,t,i)=>{i.d(t,{Z:()=>s,a:()=>r});var n=i(7294);const a={},o=n.createContext(a);function r(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);