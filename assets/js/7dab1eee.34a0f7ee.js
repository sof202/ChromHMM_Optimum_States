"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[5449],{6641:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>r,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>m});var n=s(5893),t=s(1151);const a={title:"1_SubsampleBamFiles",description:"The script used to merge and subsample processed files.",sidebar_position:2},o="1_SubsampleBamFiles",l={id:"ChromOptimise/Pipeline-Explanation/SubsampleBamFiles",title:"1_SubsampleBamFiles",description:"The script used to merge and subsample processed files.",source:"@site/docs/ChromOptimise/Pipeline-Explanation/1_SubsampleBamFiles.md",sourceDirName:"ChromOptimise/Pipeline-Explanation",slug:"/ChromOptimise/Pipeline-Explanation/SubsampleBamFiles",permalink:"/ChromOptimise/ChromOptimise/Pipeline-Explanation/SubsampleBamFiles",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"1_SubsampleBamFiles",description:"The script used to merge and subsample processed files.",sidebar_position:2},sidebar:"documentationSidebar",previous:{title:"Overall explanation of pipeline",permalink:"/ChromOptimise/ChromOptimise/Pipeline-Explanation/Overall"},next:{title:"2_BinarizeFiles",permalink:"/ChromOptimise/ChromOptimise/Pipeline-Explanation/BinarizeFiles"}},r={},m=[{value:"Explanation",id:"explanation",level:2},{value:"Example usage",id:"example-usage",level:2}];function p(e){const i={a:"a",admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.h1,{id:"1_subsamplebamfiles",children:"1_SubsampleBamFiles"}),"\n",(0,n.jsx)(i.h2,{id:"explanation",children:"Explanation"}),"\n",(0,n.jsxs)(i.p,{children:["This merges all of the processed ",(0,n.jsx)(i.code,{children:".bam"})," files from your set of processed files\nusing ",(0,n.jsx)(i.code,{children:"samtools merge"})," and subsequently subsamples this file using\n",(0,n.jsx)(i.code,{children:"samtools view -s"}),". Please ensure that your files can be found in\nPROCESSED_DIR (whatever you set this as in the config file) in mark denoted\nfolders."]}),"\n",(0,n.jsxs)(i.p,{children:["The reason for merging files and subsampling instead of simply subsampling the\noriginal files is that it is unlikely that every processed ",(0,n.jsx)(i.code,{children:".bam"})," file is of\nthe same size. If the ",(0,n.jsx)(i.code,{children:".bam"})," files are of different sizes, then different\nsubsamples with the same number of files can have different sizes.\n",(0,n.jsx)(i.br,{}),"\n","This results in the different samples no longer being directly comparable as\nthey will likely have different sizes."]}),"\n",(0,n.jsx)(i.admonition,{title:"Large number of files",type:"note",children:(0,n.jsxs)(i.p,{children:["If you are working with a lot of files, this step can use a large amount of\nmemory due to the way samtools merges files, see ",(0,n.jsx)(i.a,{href:"/ChromOptimise/ChromOptimise/Memory-Profiling",children:"memory profiling"})," for more information."]})}),"\n",(0,n.jsx)(i.admonition,{title:"outdated samtools",type:"warning",children:(0,n.jsx)(i.p,{children:"Samtools had a known bug in version 0.1.18 where subsampling would fail if the\nsample size was above 50%, ensure that your version of samtools is up to date."})}),"\n",(0,n.jsx)(i.h2,{id:"example-usage",children:"Example usage"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-bash",children:'# Merges all files in ${PROCESSED_DIR}/H3k27me3 and subsamples this file\n# with sample size 75%\nsbatch 1_SubsampleBamFiles.sh \\\n--config="path/to/configuration/directory" \\\n--mark="H3K27me3" \\\n--samplesize=75\n'})})]})}function d(e={}){const{wrapper:i}={...(0,t.a)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},1151:(e,i,s)=>{s.d(i,{Z:()=>l,a:()=>o});var n=s(7294);const t={},a=n.createContext(t);function o(e){const i=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),n.createElement(a.Provider,{value:i},e.children)}}}]);