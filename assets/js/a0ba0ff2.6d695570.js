"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[9510],{8283:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>r,toc:()=>h});var n=t(5893),s=t(1151);const a={title:"4_BinarizeFiles",description:"The script used to binarize the dataset for ChromHMM.",sidebar_position:6},o="4_BinarizeFiles",r={id:"ChromOptimise/Pipeline-Explanation/BinarizeFiles",title:"4_BinarizeFiles",description:"The script used to binarize the dataset for ChromHMM.",source:"@site/docs/ChromOptimise/Pipeline-Explanation/4_BinarizeFiles.md",sourceDirName:"ChromOptimise/Pipeline-Explanation",slug:"/ChromOptimise/Pipeline-Explanation/BinarizeFiles",permalink:"/ChromOptimise/ChromOptimise/Pipeline-Explanation/BinarizeFiles",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{title:"4_BinarizeFiles",description:"The script used to binarize the dataset for ChromHMM.",sidebar_position:6},sidebar:"documentationSidebar",previous:{title:"3_SubsampleBamFiles",permalink:"/ChromOptimise/ChromOptimise/Pipeline-Explanation/SubsampleBamFiles"},next:{title:"5_batch_CreateIncrementalModels",permalink:"/ChromOptimise/ChromOptimise/Pipeline-Explanation/batch_CreateIncrementalModels"}},l={},h=[{value:"Explanation",id:"explanation",level:2},{value:"Bin size",id:"bin-size",level:3}];function c(e){const i={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.h1,{id:"4_binarizefiles",children:"4_BinarizeFiles"}),"\n",(0,n.jsx)(i.h2,{id:"explanation",children:"Explanation"}),"\n",(0,n.jsxs)(i.p,{children:["This uses ChromHMM's ",(0,n.jsx)(i.code,{children:"BinarizeBam"})," command to binarize the subsampled ",(0,n.jsx)(i.code,{children:".bam"})," file produced in the previous step."]}),"\n",(0,n.jsx)(i.p,{children:"It is assumed at this point that the at least step 3 has been completed for all of the epigenetic marks that you aim to use in the hidden Markov models, and that the sample size used for each mark is the same."}),"\n",(0,n.jsx)(i.admonition,{title:"Unwanted chromosomes",type:"note",children:(0,n.jsx)(i.p,{children:"Sometimes your dataset will contain information for additional chromosomes that you don't want to include in further downstream analysis. For example, mitochondrial DNA. At the bottom of this script, there is some commented code. You can modify this line to tell the script to delete such unwanted files."})}),"\n",(0,n.jsx)(i.h3,{id:"bin-size",children:"Bin size"}),"\n",(0,n.jsx)(i.p,{children:"This step takes a user input for the bin size, this will have a noticable effect on the quality of your models. ChromHMM recommends a bin size of 200 and this is reflected in this pipeline. It is important to consider the implications of changing the bin size. A lower value will increase the granularity of the data, but increases the susceptibility to random noise in the dataset. A larger value will achieve the opposite."}),"\n",(0,n.jsxs)(i.p,{children:["To learn more about how the bin size (and other factors) affect the final result of the pipeline, head to ",(0,n.jsx)(i.a,{href:"/ChromOptimise/ChromOptimise/Factors-that-affect-the-output",children:"this page"}),"."]}),"\n",(0,n.jsx)(i.h1,{id:"example-usage",children:"Example usage"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-bash",children:'# Takes all files in ${SUBSAMPLE_DIR} that used a sample size of 75% and\n# binarizes them using a bin size of 200 and the hg19 assembly\nsbatch 4_BinarizeFiles.sh \\\n--config="path/to/configuration/directory" \\\n--binsize=200 \\\n--samplesize=75 \\\n--assembly=hg19\n'})})]})}function d(e={}){const{wrapper:i}={...(0,s.a)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},1151:(e,i,t)=>{t.d(i,{Z:()=>r,a:()=>o});var n=t(7294);const s={},a=n.createContext(s);function o(e){const i=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function r(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),n.createElement(a.Provider,{value:i},e.children)}}}]);