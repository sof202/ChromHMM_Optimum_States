"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[8010],{7481:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>m});var s=n(5893),a=n(1151);const i={title:"2_batch_CreateIncrementalModels",description:"The script used to create/learn models using ChromHMM.",sidebar_position:3},r="2_batch_CreateIncrementalModels",o={id:"ChromOptimise/Pipeline-Explanation/batch_CreateIncrementalModels",title:"2_batch_CreateIncrementalModels",description:"The script used to create/learn models using ChromHMM.",source:"@site/docs/ChromOptimise/Pipeline-Explanation/2_batch_CreateIncrementalModels.md",sourceDirName:"ChromOptimise/Pipeline-Explanation",slug:"/ChromOptimise/Pipeline-Explanation/batch_CreateIncrementalModels",permalink:"/ChromOptimise/ChromOptimise/Pipeline-Explanation/batch_CreateIncrementalModels",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"2_batch_CreateIncrementalModels",description:"The script used to create/learn models using ChromHMM.",sidebar_position:3},sidebar:"documentationSidebar",previous:{title:"1_BinarizeFiles",permalink:"/ChromOptimise/ChromOptimise/Pipeline-Explanation/BinarizeFiles"},next:{title:"Optimal Number of States",permalink:"/ChromOptimise/category/optimal-number-of-states"}},l={},m=[{value:"Explanation",id:"explanation",level:2},{value:"Maximum number of states",id:"maximum-number-of-states",level:3}];function c(e){const t={a:"a",admonition:"admonition",annotation:"annotation",code:"code",h1:"h1",h2:"h2",h3:"h3",math:"math",mi:"mi",mn:"mn",mrow:"mrow",msup:"msup",p:"p",semantics:"semantics",span:"span",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"2_batch_createincrementalmodels",children:"2_batch_CreateIncrementalModels"}),"\n",(0,s.jsx)(t.h2,{id:"explanation",children:"Explanation"}),"\n",(0,s.jsxs)(t.p,{children:["This uses ChromHMM's ",(0,s.jsx)(t.code,{children:"LearnModel"})," command to learn multiple hidden Markov\nmodels. It also obtains the\n",(0,s.jsx)(t.a,{href:"/ChromOptimise/ChromOptimise/ChromHMM-overview#estimated-log-likelihood",children:"estimated log likelihood"}),"\nvalue of each model."]}),"\n",(0,s.jsx)(t.p,{children:"This script will always generate a model with 2 states. Inspecting the emission\nparameters for this simple model is a good way of validating your data."}),"\n",(0,s.jsx)(t.p,{children:"Generally, most of your genomic data will be non-coding regions. The 2 state\nmodel should reflect this property in the overlap files produced."}),"\n",(0,s.jsx)(t.h3,{id:"maximum-number-of-states",children:"Maximum number of states"}),"\n",(0,s.jsx)(t.p,{children:"This script uses the 'information' initialisation method for the starting\nparameter set for the model. Due to this, the number of states in the model\ncannot exceed the total number of combinations of marks in your dataset."}),"\n",(0,s.jsxs)(t.p,{children:["One may not know this number before running the script. However, the maximum\nnumber of mark combinations one can have for a binary file will always be less\nthan or equal to ",(0,s.jsxs)(t.span,{className:"katex",children:[(0,s.jsx)(t.span,{className:"katex-mathml",children:(0,s.jsx)(t.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,s.jsxs)(t.semantics,{children:[(0,s.jsx)(t.mrow,{children:(0,s.jsxs)(t.msup,{children:[(0,s.jsx)(t.mn,{children:"2"}),(0,s.jsx)(t.mi,{children:"k"})]})}),(0,s.jsx)(t.annotation,{encoding:"application/x-tex",children:"2^k"})]})})}),(0,s.jsx)(t.span,{className:"katex-html","aria-hidden":"true",children:(0,s.jsxs)(t.span,{className:"base",children:[(0,s.jsx)(t.span,{className:"strut",style:{height:"0.8491em"}}),(0,s.jsxs)(t.span,{className:"mord",children:[(0,s.jsx)(t.span,{className:"mord",children:"2"}),(0,s.jsx)(t.span,{className:"msupsub",children:(0,s.jsx)(t.span,{className:"vlist-t",children:(0,s.jsx)(t.span,{className:"vlist-r",children:(0,s.jsx)(t.span,{className:"vlist",style:{height:"0.8491em"},children:(0,s.jsxs)(t.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,s.jsx)(t.span,{className:"pstrut",style:{height:"2.7em"}}),(0,s.jsx)(t.span,{className:"sizing reset-size6 size3 mtight",children:(0,s.jsx)(t.span,{className:"mord mathnormal mtight",style:{marginRight:"0.03148em"},children:"k"})})]})})})})})]})]})})]}),", where ",(0,s.jsxs)(t.span,{className:"katex",children:[(0,s.jsx)(t.span,{className:"katex-mathml",children:(0,s.jsx)(t.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,s.jsxs)(t.semantics,{children:[(0,s.jsx)(t.mrow,{children:(0,s.jsx)(t.mi,{children:"k"})}),(0,s.jsx)(t.annotation,{encoding:"application/x-tex",children:"k"})]})})}),(0,s.jsx)(t.span,{className:"katex-html","aria-hidden":"true",children:(0,s.jsxs)(t.span,{className:"base",children:[(0,s.jsx)(t.span,{className:"strut",style:{height:"0.6944em"}}),(0,s.jsx)(t.span,{className:"mord mathnormal",style:{marginRight:"0.03148em"},children:"k"})]})})]})," is the total number of marks. If one exceeds\nthe maximum number of states permitted for this initialisation technique,\nChromHMM will tell the user the maximum number of states allowed in the\nassociated error message."]}),"\n",(0,s.jsx)(t.admonition,{title:"consistency",type:"warning",children:(0,s.jsx)(t.p,{children:"Ensure that the bin size, sample size and assembly are consistent across the\npipeline."})})]})}function h(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>o,a:()=>r});var s=n(7294);const a={},i=s.createContext(a);function r(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);