"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[5730],{7464:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var i=t(5893),a=t(1151);const o={title:"Overall Explanation",description:"The purpose of the supplementary pipeline.",sidebar_position:1},l="Overall Explanation",s={id:"ChromOptimise/Supplementary-Pipeline-Explanation/Overall",title:"Overall Explanation",description:"The purpose of the supplementary pipeline.",source:"@site/docs/ChromOptimise/Supplementary-Pipeline-Explanation/Overall.md",sourceDirName:"ChromOptimise/Supplementary-Pipeline-Explanation",slug:"/ChromOptimise/Supplementary-Pipeline-Explanation/Overall",permalink:"/ChromOptimise/ChromOptimise/Supplementary-Pipeline-Explanation/Overall",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Overall Explanation",description:"The purpose of the supplementary pipeline.",sidebar_position:1},sidebar:"documentationSidebar",previous:{title:"Supplementary Pipeline - Usage and Explanation",permalink:"/ChromOptimise/category/supplementary-pipeline---usage-and-explanation"},next:{title:"Generate_Big_Model",permalink:"/ChromOptimise/ChromOptimise/Supplementary-Pipeline-Explanation/Generate_Big_Model"}},r={},p=[{value:"Explanation",id:"explanation",level:2}];function h(e){const n={a:"a",em:"em",h1:"h1",h2:"h2",p:"p",...(0,a.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"overall-explanation",children:"Overall Explanation"}),"\n",(0,i.jsxs)(n.p,{children:["There are\n",(0,i.jsx)(n.a,{href:"https://github.com/sof202/ChromOptimise/tree/main/supplementary",children:"additional scripts"})," that\nare given with ChromOptimise that are not directly a part of the main pipeline.\nHowever, these scripts proved useful in constructing the pipeline and so were\nelected to be included in this repository."]}),"\n",(0,i.jsx)(n.h2,{id:"explanation",children:"Explanation"}),"\n",(0,i.jsxs)(n.p,{children:["It became abundantly clear during the production of this pipeline that no\nmatter the method for determining the optimal number of states to use with a\nmodel, a threshold had to be created. The concept of a threshold is very common\nin statistics, one needs to draw the line somewhere for significance. One sees\nthese thresholds all the time in statistical analysis, perhaps in a p-value or\na confidence interval. However, it is less common that a compelling explanation\nbehind ",(0,i.jsx)(n.em,{children:"why"})," a threshold is actually given. Thresholds for p-values are usually\nchosen just because 'they are really small'. This isn't really good enough as\nit provides an avenue for biases to enter the analysis (whether intentionally\nor not). This obviously defeats the point in making a threshold in the first\nplace."]}),"\n",(0,i.jsx)(n.p,{children:"This supplementary pipeline was generated to provide a starting point for\ndefining such thresholds. The main idea behind the pipeline is: In a model with\nan abundance of states (way too many for the given dataset), most states will\nbe redundant. Only a few states in an exceedingly large model will actually be\nrelevant. Hopefully, there will be a noticable difference between these types\nof states ('obviously redundant' and 'obviously relevant') under the metrics\nthat are used by the main pipeline."}),"\n",(0,i.jsx)(n.p,{children:"This pipeline will create these large models and showcases the metrics used in\nthe main pipeline for said models."})]})}function d(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>s,a:()=>l});var i=t(7294);const a={},o=i.createContext(a);function l(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);